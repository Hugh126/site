一、感恩节秒杀活动
在感恩节展示用户的年度首次消费信息、月均消费信息等，并根据规则匹配获取对应优惠券。
1、提前汇总用户消费信息到统计表
2、Redis的Hash结构缓存用户消费信息，使用J2Cache二级缓存
3、使用pipline提前预热
4、公众号会跳转微信认证用户信息，针对活动场景5分钟缓存避免重复认证
5、Redis扣减失败要排除异常，和数据库保持一致性
6、前段资源控制大小，并配置CDN后预热
7、活动首页不展示用户数据，loading延迟加载

二、在线排队系统
1. 搜索附近营业门店API，关联获取排队信息
2. 用户选定门店排队，推送排队成功通知
3. 管理后端确认入座；前3桌收到排队变更提醒
4. 统计页展示分城市所有门店排队情况，汇总排队门店比例

三、定时任务分布式改造
基于Quartz的分布式改造：因为历史原因，服务拆分时有部分服务特殊处理，故而部分任务只能在特定服务器执行。
但是希望所有的任务可视化、可管理，所以一样需要关联到数据库。
1. 所有任务，包括XML配置任务都会走固定Filter。加载到SpringContext后，记录到表中
2. 代理所有任务的CURD，让任务都走同一个加载方法，根据表的分组需要添加分组
3. 在前置Filter中判断任务是否应该执行，在后置方法中记录任务耗时时间
4. 通过Redis管道分发，单台服务器中任务的变更操作

四、会员价值指标体系
部分指标只需要拉取一次，如用户首次消费信息；部分指标需要持续（每日）更新，如消费频次，最喜欢菜品等。
1. 首次从历史数据仓库分批拉取全部订单，初始化会员信息
2. 每日增量更新会员消费信息。部分信息需要冗余，如：用户消费门店、菜品、时段等
3. BI中通过会员指标表，每日更新新增会员数、会员月均消费等

五、自建运维平台是Ayplot用jeecgboot低代码框架（Vue+Springboot）实现自己的企业CI/CD平台
1. 支持Svn/Git代码仓库  
2. 支持各服务自定义启动脚本：可用于切量实现滚动部署，也可关联分离的前段打包..
3. 支持服务状态告警; 也在告警消息内包含可执行回调，为管理员关键时刻暴力远程重启服务
4. 支持补丁：本地py脚本打包编译后zip包，在平台上传到远端，利用Jrebel实现动态更新
5. 支持生产和灰度的SQL差异对比，可直接同步到生产环境
6. 支持CDN资源的灵活发布、更新预热

六、数据库冷备与恢复
1、通过mysqldump每日备份（日内多次备份依赖阿里云服务器快照备份）
2、在DAS上用计划任务拉取备份到本地，保持滚动更新
3、解压单表zip覆盖即可恢复
4、若要支持mysql增量备份；可以开启mysql的binlog，通过xtrabackup完成

七、海带碰小程序前后端部署维护
初版为使用php的Laravel框架，拼桌玩法的社交小程序，单机支撑用户200W；后来功能迭代较快，复杂API性能制约问题，数据库迁移到TIDB，后台切换为Jeecgboot

八、FineBI部署，统计SQL输出
根据FineBI文档搭建相关组建，配置nginx注册服务；配置BI，并迁移既有指标图表。
先删再插解决历史数据变更问题

九、Helens官网部署维护
数据API通过Strapi搭建，自己写shell脚本实现一键更新

十、TiDB下的TinyKV项目（开源）
这个项目是TiDB以开源数据库开发课程为依托，让更多开发者/高校参与到TIDB的认知与优化。总共4个任务，用Go语言完成，个人完成前两个任务：独立KV和基于Raft的KV。
https://github.com/Hugh126/tinykv

十一、部署改造短链项目（开源）
开始的需求是为了有一个自主可控的短链生产系统，要求方便业务人员使用，原来简单改造开源版本后部署即可。为支持各类文件的分享，后面新增文件管理模块，支持微信扫码跳转。
https://gitee.com/hugh126/bluewind-shorturl



一、NCE-Super控制器
网络BG有光控制器（SDN，软件定义网络）和WAN控制器两个主要产品，还有各硬件厂商的私有控制器，Super控制器是构建多类控制器之上的产品。整个项目是基于华为云计算Pass平台ServiceStage的微服务架构下。
除了CURD和API的对接，主要突出的有：
1. 大量LLT以及代码质量优化类工作
2. 解决异常透传问题
3. 使用ForkJoinTask提升多管道业务下发效率问题

二、TSDN-沙箱生态开发项目
JSP + Struts2 的应用分发后台独立开发，调用SDN控制器北向接口下发EPL/Clinet业务，建立通信隧道。最终达到可异地观看高清视频的演示效果。为商家提供效果展示，同时为开发者提供接口可编程实现样例。
个人独立完成页面+后台API对接北向，在其他专业人员帮助下完成打通、解决疑难问题，最终实现隧道效果展示。

1. 流量包、租户相关信息管理；统计数据API
2. Python脚本通过多线程实现日志文件汇总，输出准实时（2分钟）内的用户流量使用情况




git clone https://github.com/xuchengsheng/wx-dump-4j.git


